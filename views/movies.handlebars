<!-- loop over each movie in the array -->

<div class="hero-container row">
	{{#if logged_in}}
	<img src="{{movie.poster}}">
	{{!-- <div class="ticket__content"> --}}
		<h4 class="ticket__movie-title">{{movie.name}}</h4>
		<p class="ticket__movie-slogan">
			{{movie.description}}
		</p>
		<span class="heading">User Rating</span>

		<p>{{user.name}} rates this movie:{{average_rating}}</p>

		<span class="fa fa-star checked"></span>
		<span class="fa fa-star checked"></span>
		<span class="fa fa-star checked"></span>
		<span class="fa fa-star checked"></span>
		<span class="fa fa-star"></span>
		<hr style="border:3px solid #f1f1f1">
		<form class="form comment-form">
			<div class="form__group">
				<label class="form__label" for="rating">Rating</label>

				<input class="form__input" type="number" id="rating" name="rating" min="0" max="10" placeholder="Enter rating number">

			</div>
			<div class="form__group">
				<label class="form__label" for="comment">Comment</label>
				<input class="form__input" type="text" id="comment-box" name="comment" placeholder="Enter comment">
			</div>
			{{!-- <input type="text" id="rating-box" placeholder="Enter rating number">
			<input type="text" id="comment-box" placeholder="Enter comment"> --}}
			<input type="hidden" id="movie-id" value="{{movie.id}}">
			<input type="hidden" id="user-id" value="{{user.id}}">
			<button id="postbtn" type="submit">Post Your Review</button>
		</form>
		

		<ul id="unordered"></ul>

	{{!-- <div class="ticket__content"> --}}
		{{!-- {{#each movie.movieComments}}
		<li class="comment">
			<div class="comment__content">
			<p class="comment__author">{{user.username}} rates this: {{rating}}</p>
			<p class="comment__author">Their Review: {{feedback}}</p>
			</div>
		{{/each}} --}}
		<div class="cards">
		{{#each movie.movieComments}}
		<div class="card snake">
			<div class="inner">
			<h2>{{user.username}} rates this: {{rating}}</p>
			<p>Their Review: {{feedback}}</p>
			</div>
		</div>
		{{/each}}
		</div>
		{{!--
	</div> --}}
	{{else}}
	<a href="/login">login</a>
	<div class="ticket-container">
		<div class="ticket__content">
			<h4 class="ticket__movie-title">{{movie.name}}</h4>
			<p class="ticket__movie-slogan">
				{{movie.description}}
			</p>
		</div>
	</div>
	{{/if}}

<style>
      *,
      *:before,
      *:after {
        box-sizing: inherit;
      }
      .cards {
        column-count: 3;
        --gap: 50px;
        column-gap: var(--gap);
        margin: var(--gap);
      }
      @media (max-width: 1000px) {
        .cards {
          column-count: 2;
        }
      }
      @media (max-width: 600px) {
        .cards {
          column-count: 1;
        }
      }

      .card {
        --yellow: #ffc600;
        --pink: #ff3f8e;
        --color1: var(--yellow);
        --color2: var(--pink);
        --inline: 10px;
        --block: 0;
        --duration: 150ms;
        --padding: 4px;
        --border: 1px;
        --radius: 20px;
        box-shadow: inset 0 0 0 var(--border) grey;
        padding: var(--padding);
        border-radius: calc(var(--radius) + var(--padding));
        overflow: hidden;
        display: grid;
        margin-bottom: var(--gap);
        cursor: pointer;
      }

      .inner {
        background: #457fb4;
        z-index: 2;
        padding: 20px;
        border-radius: var(--radius);
      }

      .card button {
        display: block;
        width: 100%;
        border: 0;
        color: white;
        padding: 10px;
        position: relative;
        border-radius: var(--radius);
        background: #457fb4;
        font-weight: 900;
        font-size: 15px;
      }
      .card button:before {
        content: "";
        display: block;
        width: calc(100% + 2px);
        height: calc(100% + 2px);
        position: absolute;
        top: -1px;
        left: -1px;
        z-index: -1;
        border-radius: var(--radius);
        background: linear-gradient(45deg, var(--color2), var(--color1));
      }

      .tail {
        transition: all var(--duration);
        width: var(--inline);
        height: var(--block);
        background: var(--color1);
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
      }

      .tail.top {
        background-image: linear-gradient(to right, var(--color1), var(--color2));
        height: var(--inline);
        width: var(--block);
        transition-delay: calc(var(--duration) * 2);
      }

      .tail.right {
        right: 0;
        left: unset;
        background: var(--color2);
        transition-delay: var(--duration);
      }

      .tail.bottom {
        height: var(--inline);
        width: var(--block);
        bottom: 0;
        right: 0;
        left: unset;
        top: unset;
        background-image: linear-gradient(to right, var(--color1), var(--color2));
        transition-delay: 0ms;
      }

      .tail.left {
        bottom: 0;
        top: unset;
        transition-delay: calc(var(--duration) * 3);
      }

      .snake:where(.start, :hover) .tail.top {
        transition-delay: var(--duration);
      }
      .snake:where(.start, :hover) .tail.right {
        transition-delay: calc(var(--duration) * 2);
      }
      .snake:where(.start, :hover) .tail.bottom {
        transition-delay: calc(var(--duration) * 3);
      }
      .snake:where(.start, :hover) .tail.left {
        transition-delay: 0ms;
      }

      .snake {
        position: relative;
      }

      .snake.start .tail {
        --block: 0;
      }
      .snake:hover .tail {
        --block: 100%;
      }

      p {
        line-height: 1.6;
      }
      h2 {
        margin: 0;
        text-align: center;
      }

      h2:after {
        content: "";
        display: block;
        width: 100%;
        height: var(--padding);
        border-radius: 2px;
        background: linear-gradient(to right, var(--color1), var(--color2));
        margin-top: 10px;
      }
    </style>

	<script>
      const cards = document.querySelectorAll(`.card`);
      // Add the tails to each card
      cards.forEach((card) => {
        [
          `top`,
          `right`,
          `bottom`,
          `left`,
        ].forEach((side) => {
          const tail = document.createElement(`div`);
          tail.classList.add(`tail`, side);
          card.appendChild(tail);
        });
        // if that card has no colours, add some
        if (!card.style.getPropertyValue(`--color1`)) {
          card.style.setProperty(`--color1`, `hsl(${Math.random() * 360}, 100%, 50%)`);
          card.style.setProperty(`--color2`, `hsl(${Math.random() * 360}, 100%, 50%)`);
        }
      });

      setInterval(() => {
        cards.forEach((card) => {
          if (!card.style.getPropertyValue(`--color1`)) {
            card.style.setProperty(`--color1`, `hsl(${Math.random() * 360}, 100%, 50%)`);
            card.style.setProperty(`--color2`, `hsl(${Math.random() * 360}, 100%, 50%)`);
          }
        });
      }, 7000);
    </script>

	<script src="/js/post.js"></script>